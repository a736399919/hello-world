#=================================================
#   Description: Build OpenWrt using GitHub Actions
#   Lisence: MIT
#   Author: P3TERX
#   Blog: https://p3terx.com
#=================================================

name: newifi y1

on: 
  release:
    types: [published]
  #push:
  #  branches: 
  #   - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean  

    - name: Load custom configuration
      run: |
        chmod +x diy.sh
        ./diy.sh
        [ -e files ] && mv files openwrt/files
        [ -e 1907aria2 ] && mv 1907aria2 openwrt/.config
        cd openwrt
        make defconfig
    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: Assemble artifact
      run: |
        cd openwrt
        mkdir -p Y1/1907aria2
        find ./bin -name "*sysupgrade.bin"  -type f  -exec mv {}   ./Y1/1907aria2   \;
        
    - name: Load custom configuration1
      run: |
        [ -e 1907y1 ] && mv 1907y1 openwrt/.config
        cd openwrt
        make defconfig 
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Assemble artifact1
      run: |
        cd openwrt
        mkdir -p Y1/1907y1
        find ./bin -name "*sysupgrade.bin"  -type f  -exec mv {}   ./Y1/1907y1   \;  
        
    - name: Load custom configuration1
      run: |
        [ -e ledessr ] && mv ledessr openwrt/.config
        cd openwrt
        make defconfig 
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Assemble artifact1
      run: |
        cd openwrt
        mkdir -p Y1/ledessr
        find ./bin -name "*sysupgrade.bin"  -type f  -exec mv {}   ./Y1/ledessr   \;    
        
    - name: Load custom configuration1
      run: |
        [ -e 1907y1 ] && mv 1907y1 openwrt/.config
        cd openwrt
        make defconfig 
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Assemble artifact3
      run: |
        cd openwrt
        mkdir -p Y1/ledey1
        find ./bin -name "*sysupgrade.bin"  -type f  -exec mv {}   ./Y1/ledey1   \;        

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
          name: newifi-y1
          path: openwrt/Y1
